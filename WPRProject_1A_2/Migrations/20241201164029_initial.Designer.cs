// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPRProject_1A_2;

#nullable disable

namespace WPRProject_1A_2.Migrations
{
    [DbContext(typeof(CarAndAllContext))]
    [Migration("20241201164029_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ReserveringVoertuig", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReserveringId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccountId", "ReserveringId");

                    b.HasIndex("ReserveringId");

                    b.ToTable("ReserveringVoertuig");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Abonnementen.Abonnement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxMedewerkers")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Maxvoertuigen")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Abonnementen");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Abonnementen.Adres", b =>
                {
                    b.Property<int>("AdresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Gemeente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Huisnummer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("TEXT");

                    b.Property<string>("Provincie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Straatnaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Woonplaats")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("AdresId");

                    b.ToTable("Adressen");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Abonnementen.Bedrijf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AbonnementId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdresId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bedrijfsnaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Domeinnaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("KvkNummer")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AbonnementId");

                    b.HasIndex("AdresId");

                    b.ToTable("Bedrijf");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Accounts.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BedrijfId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BetaalgeschiedenisId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Wachtwoord")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BedrijfId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Betaling.Betaling", b =>
                {
                    b.Property<int>("BetalingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Bedrag")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsBetaald")
                        .HasColumnType("INTEGER");

                    b.HasKey("BetalingId");

                    b.ToTable("Betalingen");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Betalingen.Factuur", b =>
                {
                    b.Property<int>("FactuurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BedrijfId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BetaalgeschiedenisId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Prijs")
                        .HasColumnType("REAL");

                    b.Property<int>("ReserveringId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FactuurId");

                    b.HasIndex("BedrijfId");

                    b.HasIndex("BetaalgeschiedenisId");

                    b.HasIndex("ReserveringId");

                    b.ToTable("Factuur");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Voertuigmodellen.Reparatie", b =>
                {
                    b.Property<int>("ReparatieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Beschrijving")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Opmerkingen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Reparatiedatum")
                        .HasColumnType("TEXT");

                    b.HasKey("ReparatieId");

                    b.ToTable("Reparatie");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Voertuigmodellen.Reservering", b =>
                {
                    b.Property<int>("ReserveringId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AardVanReis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Begindatum")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Einddatum")
                        .HasColumnType("TEXT");

                    b.Property<int>("Huuraanvraag")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBetaald")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RijbewijsDocumentnummer")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Totaalprijs")
                        .HasColumnType("REAL");

                    b.Property<string>("VersteBestemming")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("VerwachteHoeveelheidKm")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReserveringId");

                    b.HasIndex("AccountId");

                    b.ToTable("Reserveringen");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Voertuigmodellen.Schadeclaim", b =>
                {
                    b.Property<int>("SchadeclaimId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Beschrijving")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReparatieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchadeclaimStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VoertuigId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SchadeclaimId");

                    b.HasIndex("VoertuigId");

                    b.ToTable("Schadeclaim");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Voertuigmodellen.Voertuig", b =>
                {
                    b.Property<int>("VoertuigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Aanschafjaar")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kenteken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Kleur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Merk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReserveringId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SchadeclaimId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Voertuigstatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("VoertuigId");

                    b.ToTable("Voertuigen");
                });

            modelBuilder.Entity("ReserveringVoertuig", b =>
                {
                    b.HasOne("WPRProject_1A_2.Modellen.Voertuigmodellen.Reservering", null)
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPRProject_1A_2.Modellen.Voertuigmodellen.Voertuig", null)
                        .WithMany()
                        .HasForeignKey("ReserveringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Abonnementen.Bedrijf", b =>
                {
                    b.HasOne("WPRProject_1A_2.Modellen.Abonnementen.Abonnement", "Abonnement")
                        .WithMany()
                        .HasForeignKey("AbonnementId");

                    b.HasOne("WPRProject_1A_2.Modellen.Abonnementen.Adres", "Adres")
                        .WithMany()
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Abonnement");

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Accounts.Account", b =>
                {
                    b.HasOne("WPRProject_1A_2.Modellen.Abonnementen.Bedrijf", null)
                        .WithMany("Accounts")
                        .HasForeignKey("BedrijfId");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Betalingen.Factuur", b =>
                {
                    b.HasOne("WPRProject_1A_2.Modellen.Abonnementen.Bedrijf", "Bedrijf")
                        .WithMany()
                        .HasForeignKey("BedrijfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPRProject_1A_2.Modellen.Accounts.Account", null)
                        .WithMany("Betaalgeschiedenis")
                        .HasForeignKey("BetaalgeschiedenisId");

                    b.HasOne("WPRProject_1A_2.Modellen.Voertuigmodellen.Reservering", "Reservering")
                        .WithMany()
                        .HasForeignKey("ReserveringId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bedrijf");

                    b.Navigation("Reservering");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Voertuigmodellen.Reparatie", b =>
                {
                    b.HasOne("WPRProject_1A_2.Modellen.Voertuigmodellen.Schadeclaim", null)
                        .WithMany("Reparaties")
                        .HasForeignKey("ReparatieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Voertuigmodellen.Reservering", b =>
                {
                    b.HasOne("WPRProject_1A_2.Modellen.Accounts.Account", "Account")
                        .WithMany("ActieveReserveringen")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Voertuigmodellen.Schadeclaim", b =>
                {
                    b.HasOne("WPRProject_1A_2.Modellen.Voertuigmodellen.Voertuig", null)
                        .WithMany("Schadeclaims")
                        .HasForeignKey("SchadeclaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPRProject_1A_2.Modellen.Voertuigmodellen.Voertuig", "Voertuig")
                        .WithMany()
                        .HasForeignKey("VoertuigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voertuig");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Abonnementen.Bedrijf", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Accounts.Account", b =>
                {
                    b.Navigation("ActieveReserveringen");

                    b.Navigation("Betaalgeschiedenis");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Voertuigmodellen.Schadeclaim", b =>
                {
                    b.Navigation("Reparaties");
                });

            modelBuilder.Entity("WPRProject_1A_2.Modellen.Voertuigmodellen.Voertuig", b =>
                {
                    b.Navigation("Schadeclaims");
                });
#pragma warning restore 612, 618
        }
    }
}
